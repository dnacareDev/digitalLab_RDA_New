<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digitalLab.Mapper.DivisionMapper">
   
    <select id="getSeqId" resultType="int">
        SELECT division_seq_id.nextval FROM dual;
    </select>

    <insert id="registDivision" parameterType="Division">
        INSERT INTO division(
            division_id,
            division,
            division_depth,
            division_parents
        )
        VALUES(
            #{division_id},
            #{division},
            #{depth},
            #{division_parents}
        )
    </insert>

    <select id="selectDivisionListByParents" parameterType="DivisionSearchParam" resultType="Division">
        SELECT
        *
        FROM division d
        	<if test="division_depth == 4">
        	JOIN method m
        	ON d.division_id = m.division_id
        	</if>
        WHERE d.division_depth = #{division_depth}
              <if test="division_id != -1">
                AND d.division_parents = #{division_id}
              </if>
              
              <if test="division_depth == 4">
              		AND m.status = 1
	              	<if test="authority != 'ADMIN'">
	              		<if test="authority != 'MANAGER' ">
		            	  	AND ((m.method_share = 1 AND m.method_code LIKE '%'||#{user_code}||'%')	
		       	 			OR (m.method_share = 2 AND m.account = #{account}))
	       	 			</if>
	       	 		</if>	
       	 		AND m.USEE_AT_CODE = #{USEE_AT_CODE}
              </if>
    </select>

    <select id="selectDivisionByMethod" parameterType="int" resultType="CommonDivision">
        SELECT d4.*, d3.division_id division_depth3_id, d3.division division_depth3,
               d2.division_id division_depth2_id, d2.division division_depth2, d1.division division_depth1, d1.division_id division_depth1_id
        FROM method m
            LEFT OUTER JOIN division d4 ON m.division_id = d4.division_id and d4.division_depth = 4
            LEFT OUTER JOIN division d3 ON D4.division_parents = d3.division_id and d3.division_depth = 3
            LEFT OUTER JOIN division d2 on d3.division_parents = d2.division_id and d2.division_depth = 2
            LEFT OUTER JOIN division d1 on d2.division_parents = d1.division_id and d1.division_depth = 1
        WHERE m.method_id = #{method_id}
    </select>
    
    <select id="selectDivisionByAnalysis" parameterType="int" resultType="CommonDivision">
        SELECT d4.*, d3.division_id division_depth3_id, d3.division division_depth3,
               d2.division_id division_depth2_id, d2.division division_depth2, d1.division division_depth1, d1.division_id division_depth1_id
        FROM plan p
            LEFT OUTER JOIN division d4 ON p.plan_division = d4.division_id and d4.division_depth = 4
            LEFT OUTER JOIN division d3 ON D4.division_parents = d3.division_id and d3.division_depth = 3
            LEFT OUTER JOIN division d2 on d3.division_parents = d2.division_id and d2.division_depth = 2
            LEFT OUTER JOIN division d1 on d2.division_parents = d1.division_id and d1.division_depth = 1
        WHERE p.plan_id = #{plan_id}
    </select>

    <select id="selectDivisionByReport"  parameterType="int" resultType="DivisionResult">
        SELECT DISTINCT  D3.*
        FROM REPORT R
                 JOIN USER_REPORT SR ON SR.REPORT_ID = R.REPORT_ID
                 JOIN SEED S ON SR.USER_REPORT_ID = S.USER_REPORT_ID
                 JOIN PLAN_SEED PS ON PS.SEED_ID = S.SEED_ID
                 JOIN PLAN P ON P.PLAN_ID = PS.PLAN_ID
                 JOIN PLAN_METHOD PM ON PM.PLAN_ID = P.PLAN_ID
                 JOIN METHOD M ON PM.METHOD_ID = M.METHOD_ID
                 JOIN DIVISION D4 ON M.DIVISION_ID = D4.DIVISION_ID
                 JOIN DIVISION D3 ON D4.DIVISION_PARENTS = D3.DIVISION_ID
        WHERE r.report_id = #{report_id} AND P.PLAN_STATUS >= 4
    </select>

    <select id="getDivisionChartData" resultType="DivisionChart">
        SELECT D3.DIVISION, PL.PLAN_STATUS, count (*) AS division_count
        FROM PLAN PL
                 JOIN PLAN_METHOD PM on PL.PLAN_ID = PM.PLAN_ID
                 JOIN METHOD M on PM.METHOD_ID = M.METHOD_ID
                 JOIN DIVISION D4 on M.DIVISION_ID = D4.DIVISION_ID
                 JOIN DIVISION D3 on D4.DIVISION_PARENTS = D3.DIVISION_ID
        <where>
       	 	<if test="user.authority != 'ADMIN'">
	       		<if test="user.authority != 'MANAGER' ">
		        AND PL.plan_code LIKE '%'||#{user.groupCode}||'%'
		        </if>
       	 	</if>
        </where> 
        GROUP BY D3.DIVISION, PL.PLAN_STATUS
    </select>

</mapper>